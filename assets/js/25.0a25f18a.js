(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{605:function(t,_,v){t.exports=v.p+"assets/img/test_pyramid.a9018fe6.png"},727:function(t,_,v){"use strict";v.r(_);var s=v(11),a=Object(s.a)({},(function(){var t=this,_=t.$createElement,s=t._self._c||_;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"自动化测试类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#自动化测试类型"}},[t._v("#")]),t._v(" 自动化测试类型")]),t._v(" "),s("p",[t._v("自动化测试有三种类型："),s("code",[t._v("Unit")]),t._v("(单元测试)、"),s("code",[t._v("Integration")]),t._v("(集成测试)、"),s("code",[t._v("End-to-end")]),t._v("(端到端测试)。")]),t._v(" "),s("ol",[s("li",[t._v("单元测试")])]),t._v(" "),s("p",[t._v("单元测试是测试一个模块，不依赖任何外部资源")]),t._v(" "),s("p",[t._v("因为没有测试应用依赖的外部资源(如操作数据库等)，无法确保应用以及功能的可靠性，这时候就需要集成测试了")]),t._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[t._v("集成测试")])]),t._v(" "),s("p",[t._v("测试一个模块或者多个模块，并伴随着它们对应的外部依赖资源，它测试的是应用代码的集成性，比如文件或者数据库。")]),t._v(" "),s("p",[t._v("这种代码执行起来稍慢，因为他们经常需要读写数据库，但是它能帮助你更加确保应用的可靠性。")]),t._v(" "),s("p",[t._v(":::tips\n集成测试的定义是：一次测试多个模块，并将他们视作一个整体来测试。如果你将两个模块放到一起测试，有人觉得这是在做集成测试，其实不是，而是单元测试.")]),t._v(" "),s("p",[t._v("为什么？因为他们没有任何的外部资源，集成测试是将一个或者多个模块与外部资源一并测试\n:::")]),t._v(" "),s("ol",{attrs:{start:"3"}},[s("li",[t._v("端对端测试")])]),t._v(" "),s("p",[t._v("依靠用户界面来驱动测试，这类测试可以保证很高的可靠性，但是它有两个很大的问题:")]),t._v(" "),s("ul",[s("li",[t._v("太慢了: 因为每次测试都需要加载用户界面，每次测试都需要加载应用，也许还要用户登录，导航到指定页面，提交表单并检查结果，等等一系列，所以测试效率非常的慢")]),t._v(" "),s("li",[t._v("太脆弱: 因为一个程序、页面修改一下，如果 UI 变了，操作逻辑变了，就会彻底破坏这种测试")])]),t._v(" "),s("h2",{attrs:{id:"测试金字塔"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#测试金字塔"}},[t._v("#")]),t._v(" 测试金字塔")]),t._v(" "),s("p",[s("img",{attrs:{src:v(605),alt:"测试金字塔"}})]),t._v(" "),s("p",[t._v("这个金字塔显示，大部分的测试应该集中在单元测试。")]),t._v(" "),s("ul",[s("li",[t._v("多用单元测试少用端对端测试")]),t._v(" "),s("li",[t._v("单元测试无法覆盖的用集成测试弥补")]),t._v(" "),s("li",[t._v("尽量减少使用端到端测试")])]),t._v(" "),s("p",[t._v("只针对"),s("strong",[t._v("最核心的流程进行测试")]),t._v("。")])])}),[],!1,null,null,null);_.default=a.exports}}]);