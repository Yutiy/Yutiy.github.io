(window.webpackJsonp=window.webpackJsonp||[]).push([[79],{682:function(s,a,n){"use strict";n.r(a);var t=n(11),e=Object(t.a)({},(function(){var s=this,a=s.$createElement,n=s._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h2",{attrs:{id:"image镜像"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#image镜像"}},[s._v("#")]),s._v(" image镜像")]),s._v(" "),n("p",[s._v("可以使用 "),n("code",[s._v("docker pull")]),s._v(" 命令来从仓库中获取所需要的镜像。")]),s._v(" "),n("div",{staticClass:"language-shell line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[s._v("// 从注册服务器registry.hub.docker.com 中的 ubuntu 仓库来下载标记为 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("12.04")]),s._v(" 的镜像\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" pull registry.hub.docker.com/ubuntu:12.04\n\n// 创建一个容器，让其中运行 "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("bash")]),s._v(" 应用\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" run -it ubuntu:12.04 /bin/bash\n\n// 列出本地镜像\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" images\n\n// 来提交更新后的副本\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" commit -m "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'add some options'")]),s._v(" -a "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'docker newbee'")]),s._v(" imageId targetRepo:tag\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br")])]),n("h2",{attrs:{id:"docker容器"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#docker容器"}},[s._v("#")]),s._v(" Docker容器")]),s._v(" "),n("p",[s._v("守护态运行: "),n("strong",[s._v('sudo docker run -d ubuntu:14.04 /bin/sh -c "while true; do echo hello world; sleep 1; done"')]),s._v("\n获取容器输出信息: "),n("strong",[s._v("sudo docker logs -f names")]),s._v("\n终止容器运行: "),n("strong",[s._v("sudo docker stop containerId")]),s._v("\n查看容器列表(包含已终止的): "),n("strong",[s._v("sudo docker ps -a")])]),s._v(" "),n("p",[s._v("重启容器: "),n("strong",[s._v("sudo docker restart containerId")]),s._v("\n删除容器: "),n("strong",[s._v("sudo docker rm containerId")])]),s._v(" "),n("p",[s._v("导入容器: "),n("strong",[s._v("cat ubuntu.tar | sudo docker import - test/ubuntu:v1.0")]),s._v("\n导出容器: "),n("strong",[s._v("sudo docker export containerId > [name].rar")])]),s._v(" "),n("p",[s._v("在使用 "),n("code",[s._v("-d")]),s._v(" 参数后，容器会进入后台运行。此时如需要进入容器操作，可使用 "),n("code",[s._v("docker attach")]),s._v(" 命令或 "),n("code",[s._v("nscenter")]),s._v(" 工具等")]),s._v(" "),n("h2",{attrs:{id:"volumes数据卷"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#volumes数据卷"}},[s._v("#")]),s._v(" Volumes数据卷")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("// 创建一个 web 容器，并加载一个数据卷到容器的 /webapp 目录\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" run -d -P --name web -v /webapp training/webapp python app.py\n\n// 加载主机的 /src/webapp 目录到容器的 /opt/webapp 目录\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" run -d -P --name web -v /src/webapp:/opt/webapp training/webapp python app.py\n\n// 挂载数据卷的默认权限是读写, ro表示只读\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" run -d -P --name web -v /src/webapp:/opt/webapp:ro\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])]),n("h3",{attrs:{id:"数据卷容器"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#数据卷容器"}},[s._v("#")]),s._v(" 数据卷容器")]),s._v(" "),n("p",[s._v("如果你有一些持续更新的数据需要在容器之间共享，最好创建数据卷容器，其实就是一个正常的容器，专门用来提供数据卷供其它容器挂载的。")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("// 首先，创建一个命名的数据卷容器 dbdata：\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" run -d -v /dbdata --name dbdata training/postgres "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" Data-only container "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" postgres\n\n// 在其他容器中使用 --volumes-from 来挂载 dbdata 容器中的数据卷\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" run -d --volumes-from dbdata --name db1 training/postgres\n$ "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" run -d --volumes-from dbdata --name db2 training/postgres\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("p",[s._v("备份: "),n("strong",[s._v("$ sudo docker run --volumes-from dbdata -v $(pwd):/backup ubuntu tar cvf /backup/backup.tar /dbdata")]),s._v("\n恢复:\n"),n("strong",[s._v("sudo docker run -v /dbdata --name dbdata2 ubuntu /bin/bash")]),s._v(" "),n("strong",[s._v("sudo docker run --volumes-from dbdata2 -v $(pwd):/backup busybox tar xvf /backup/backup.tar")])]),s._v(" "),n("h2",{attrs:{id:"docker网络"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#docker网络"}},[s._v("#")]),s._v(" Docker网络")])])}),[],!1,null,null,null);a.default=e.exports}}]);