(window.webpackJsonp=window.webpackJsonp||[]).push([[85],{688:function(v,_,t){"use strict";t.r(_);var e=t(11),o=Object(e.a)({},(function(){var v=this,_=v.$createElement,t=v._self._c||_;return t("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[t("h2",{attrs:{id:"浏览器渲染"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#浏览器渲染"}},[v._v("#")]),v._v(" 浏览器渲染")]),v._v(" "),t("p",[v._v("一个普通的网页，浏览器在渲染前要先构建 "),t("code",[v._v("DOM")]),v._v("(document object model) 和 "),t("code",[v._v("CSSOM")]),v._v("(css object model) 树;")]),v._v(" "),t("h3",{attrs:{id:"dom"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#dom"}},[v._v("#")]),v._v(" DOM")]),v._v(" "),t("p",[v._v("浏览器引擎会将收到的 HTML 标签转换成 DOM 树，构建过程如下:")]),v._v(" "),t("blockquote",[t("p",[v._v("HTML字节 -> 字符 -> 令牌和节点化 -> 词法分析 -> DOM树构建")])]),v._v(" "),t("h3",{attrs:{id:"cssom"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#cssom"}},[v._v("#")]),v._v(" CSSOM")]),v._v(" "),t("p",[v._v("浏览器引擎会将收到的 CSS 规则转换成浏览器能理解和处理的东西, 转换过程如下:")]),v._v(" "),t("blockquote",[t("p",[v._v("css字节 -> 字符 -> 令牌和节点 -> CSSOM树构建")])]),v._v(" "),t("p",[v._v("最后 "),t("code",[v._v("CSSOM")]),v._v(" 树和 "),t("code",[v._v("DOM")]),v._v(" 树合并成渲染树，并用它计算每个可见元素的布局，最终将像素渲染到屏幕上。")]),v._v(" "),t("h2",{attrs:{id:"重绘和回流"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#重绘和回流"}},[v._v("#")]),v._v(" 重绘和回流")]),v._v(" "),t("p",[v._v("回流往往代价比重绘大, 并且回流必定会导致重绘，重绘不一定回流。")]),v._v(" "),t("blockquote",[t("p",[v._v("回流: 对 DOM 操作导致 DOM 尺寸等属性的变化（比如修改元素的 "),t("code",[v._v("width、height、top")]),v._v("）时，浏览器需要重新计算元素的属性，然后再将计算的结果绘制出来。")])]),v._v(" "),t("p",[v._v("常见的回流操作:")]),v._v(" "),t("ul",[t("li",[v._v("页面首次加载")]),v._v(" "),t("li",[v._v("浏览器窗口尺寸改变")]),v._v(" "),t("li",[v._v("元素尺寸或位置改变")]),v._v(" "),t("li",[v._v("元素内容变化")]),v._v(" "),t("li",[v._v("元素字体大小变化")]),v._v(" "),t("li",[v._v("增删 DOM 元素")]),v._v(" "),t("li",[v._v("查询或调用某些特定属性方法")])]),v._v(" "),t("blockquote",[t("p",[v._v("重绘: 对 DOM 操作简单修改样式(比如修改元素的 "),t("code",[v._v("background-color, color, visibility")]),v._v(")却并未影响页面布局，浏览器不需要重新计算元素的位置尺寸等，直接为该元素绘制新的样式。")])]),v._v(" "),t("h2",{attrs:{id:"回流和重绘的优化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#回流和重绘的优化"}},[v._v("#")]),v._v(" 回流和重绘的优化")]),v._v(" "),t("ul",[t("li",[v._v("避免使用 "),t("code",[v._v("CSS")]),v._v(" 表达式")]),v._v(" "),t("li",[v._v("使用 "),t("code",[v._v("transform")]),v._v(" 代替 "),t("code",[v._v("top")])]),v._v(" "),t("li",[v._v("JS避免频繁读取会引发回流/重绘的属性: 可以用缓存变量处理")]),v._v(" "),t("li",[v._v("CSS硬件加速(GPU加速)")]),v._v(" "),t("li",[v._v("将动画效果应用到 "),t("code",[v._v("position")]),v._v(" 属性为 "),t("code",[v._v("absolute")]),v._v(" 或 "),t("code",[v._v("fixed")]),v._v(" 的元素上，避免影响其他元素的布局，这样只是一个重绘，而不是回流")]),v._v(" "),t("li",[v._v("离线操作DOM，"),t("code",[v._v("createDocumentFragment, display: none")]),v._v("等")]),v._v(" "),t("li",[v._v("尽可能在DOM树的最末端改变 class：减小回流的范围")])])])}),[],!1,null,null,null);_.default=o.exports}}]);