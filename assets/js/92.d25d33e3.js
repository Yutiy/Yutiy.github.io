(window.webpackJsonp=window.webpackJsonp||[]).push([[92],{697:function(_,a,t){"use strict";t.r(a);var v=t(11),e=Object(v.a)({},(function(){var _=this,a=_.$createElement,t=_._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[t("h2",{attrs:{id:"添加记录"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#添加记录"}},[_._v("#")]),_._v(" 添加记录")]),_._v(" "),t("p",[t("code",[_._v("INSERT [INTO] tb_name [(col_name,...)] {VALUE|VALUES}(VALUES...);")])]),_._v(" "),t("ol",[t("li",[_._v("不指定字段名称(需要按照建表时的字段顺序给每一个字段赋值) -> "),t("code",[_._v("INSERT tb_name VALUE(value...);")])]),_._v(" "),t("li",[_._v("列出指定字段 -> "),t("code",[_._v("INSERT tb_name (字段名称,...) VALUES(值,...);")])]),_._v(" "),t("li",[_._v("INSERT ... SET的形式 -> "),t("code",[_._v("INSERT tb_name SET 字段名称=值,...;")])]),_._v(" "),t("li",[_._v("INSERT ... SELECT -> "),t("code",[_._v("INSERT tb_name [(字段名称...)] SELECT 字段名称,... FROM tb_name [WHERE 条件];")])]),_._v(" "),t("li",[_._v("一次添加多条记录 -> "),t("code",[_._v("INSERT tb_name [(字段名称,...)] VALUES (值,...),(值,....),(值,...);")])])]),_._v(" "),t("h2",{attrs:{id:"修改记录"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#修改记录"}},[_._v("#")]),_._v(" 修改记录")]),_._v(" "),t("p",[_._v("如果不添加条件，整个表中的记录都会被更新 -> "),t("code",[_._v("UPDATE tb_name SET 字段名称=值,字段名称=值 [WHERE 条件];")])]),_._v(" "),t("h2",{attrs:{id:"删除记录"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#删除记录"}},[_._v("#")]),_._v(" 删除记录")]),_._v(" "),t("p",[t("code",[_._v("DELETE FROM tb_name [WHERE 条件];")])]),_._v(" "),t("ul",[t("li",[_._v("如果不添加条件，表中所有记录都会被删除")]),_._v(" "),t("li",[_._v("DELETE清空数据表的时候不会重置 "),t("strong",[_._v("AUTO_INCREMENT")]),_._v(" 的值，可以通过ALTER语句将其重置为1")]),_._v(" "),t("li",[_._v("彻底清空数据表(清除表中所有记录并重置AUTO_INCREMENT值，不能回滚) -> "),t("code",[_._v("TRUNCATE [TABLE] tb_name;")])])]),_._v(" "),t("h2",{attrs:{id:"查询记录"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#查询记录"}},[_._v("#")]),_._v(" 查询记录")]),_._v(" "),t("div",{staticClass:"language-mysql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[_._v("SELECT select_expr,... FROM tb_name\n[WHERE 条件]\n[GROUP BY {col_name|position} HAVING 二次筛选]\n[ORDER BY {col_name|position|expr} [ASC|DESC]]\n[LIMIT 限制结果集的显示条数]\n")])]),_._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[_._v("1")]),t("br"),t("span",{staticClass:"line-number"},[_._v("2")]),t("br"),t("span",{staticClass:"line-number"},[_._v("3")]),t("br"),t("span",{staticClass:"line-number"},[_._v("4")]),t("br"),t("span",{staticClass:"line-number"},[_._v("5")]),t("br")])]),t("h3",{attrs:{id:"查询表中所有记录"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#查询表中所有记录"}},[_._v("#")]),_._v(" 查询表中所有记录")]),_._v(" "),t("p",[t("code",[_._v("SELECT * FROM tb_name;")])]),_._v(" "),t("h3",{attrs:{id:"提取指定字段信息"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#提取指定字段信息"}},[_._v("#")]),_._v(" 提取指定字段信息")]),_._v(" "),t("p",[t("code",[_._v("SELECT 字段名,... FROM tb_name;")])]),_._v(" "),t("h3",{attrs:{id:"库名-表名"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#库名-表名"}},[_._v("#")]),_._v(" 库名.表名")]),_._v(" "),t("p",[t("code",[_._v("SELECT 字段名称,... FROM db_name.tb_name;")])]),_._v(" "),t("h3",{attrs:{id:"给字段起别名"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#给字段起别名"}},[_._v("#")]),_._v(" 给字段起别名")]),_._v(" "),t("p",[t("code",[_._v("SELECT 字段名称 [AS] 别名名称,... FROM tb_name;")])]),_._v(" "),t("h3",{attrs:{id:"给数据表起别名"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#给数据表起别名"}},[_._v("#")]),_._v(" 给数据表起别名")]),_._v(" "),t("p",[t("code",[_._v("SELECT 字段名称,... FROM tb_name [AS] 别名;")])]),_._v(" "),t("h3",{attrs:{id:"表名-字段名"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#表名-字段名"}},[_._v("#")]),_._v(" 表名.字段名")]),_._v(" "),t("p",[t("code",[_._v("SELECT tb_name.co_name,... FROM tb_name;")])]),_._v(" "),t("h3",{attrs:{id:"where条件-会筛选出符合条件的记录"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#where条件-会筛选出符合条件的记录"}},[_._v("#")]),_._v(" WHERE条件 -> 会筛选出符合条件的记录")]),_._v(" "),t("ul",[t("li",[t("strong",[_._v("比较运算符")]),_._v(" -> "),t("code",[_._v("> >= < <= != <> <=>")]),_._v(", "),t("code",[_._v("<=> 和 = 的区别是 <=> 可以检测 NULL 值")])]),_._v(" "),t("li",[t("strong",[_._v("IS [NOT] NULL")]),_._v(" -> "),t("code",[_._v("检测值是否为NULL或者NOT NULL")])]),_._v(" "),t("li",[t("strong",[_._v("指定范围")]),_._v(" -> "),t("code",[_._v("[NOT] BETWEEN ... AND")])]),_._v(" "),t("li",[t("strong",[_._v("指定集合")]),_._v(" -> "),t("code",[_._v("[NOT] IN(值,...)")])]),_._v(" "),t("li",[t("strong",[_._v("逻辑运算符")]),_._v(" -> "),t("code",[_._v("AND、OR")])]),_._v(" "),t("li",[t("strong",[_._v("匹配字符(% -> 任意长度的字符串, - -> 任意一个字符)")]),_._v(" -> "),t("code",[_._v("[NOT] LIKE")])])]),_._v(" "),t("h3",{attrs:{id:"group-by-分组"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#group-by-分组"}},[_._v("#")]),_._v(" GROUP BY 分组")]),_._v(" "),t("ul",[t("li",[_._v("把值相同放到一个组中，最终查询出的结果只会显示组中一条记录")]),_._v(" "),t("li",[_._v("分组配合"),t("code",[_._v("GROUP_CONCAT()")]),_._v("查看组中某个字段的详细信息")]),_._v(" "),t("li",[_._v("配合WITH ROLLUP关键使用 -> 会在记录末尾添加一条记录，是上面所有记录的总和")]),_._v(" "),t("li",[_._v("HAVING子句对分组结果进行二次筛选")]),_._v(" "),t("li",[_._v("配合聚合函数使用 -> "),t("code",[_._v("COUNT, SUM, AVG, MIN, MAX")])])]),_._v(" "),t("p",[_._v("注意: "),t("strong",[_._v("如果写的是COUNT(字段名称)，字段中的值为NULL，不统计进来, 写COUNT(*)会统计NULL值")])]),_._v(" "),t("h3",{attrs:{id:"order-by-排序"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#order-by-排序"}},[_._v("#")]),_._v(" ORDER BY 排序")]),_._v(" "),t("p",[t("code",[_._v("ORDER BY 字段名称 ASC|DESC")])]),_._v(" "),t("h3",{attrs:{id:"limit-限制结果集显示条数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#limit-限制结果集显示条数"}},[_._v("#")]),_._v(" LIMIT 限制结果集显示条数")]),_._v(" "),t("ul",[t("li",[_._v("LIMIT 值 -> 显示结果集的前几条记录")]),_._v(" "),t("li",[_._v("LIMIT offset,row_count -> 从offset开始，显示几条记录,offset从0开始")])]),_._v(" "),t("h2",{attrs:{id:"多表查询"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#多表查询"}},[_._v("#")]),_._v(" 多表查询")]),_._v(" "),t("h3",{attrs:{id:"内连接形式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#内连接形式"}},[_._v("#")]),_._v(" 内连接形式")]),_._v(" "),t("p",[_._v("查询两个表中符合连接条件的记录 -> "),t("code",[_._v("SELECT 字段名称,... FROM tb_name1 INNER JOIN tb_name2 ON 连接条件;")])]),_._v(" "),t("h3",{attrs:{id:"外连接的形式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#外连接的形式"}},[_._v("#")]),_._v(" 外连接的形式")]),_._v(" "),t("ul",[t("li",[_._v("左外连接 -> 先显示左表中的全部记录，再去右表中查询复合条件的记录，不符合的以NULL代替")])]),_._v(" "),t("p",[t("code",[_._v("SELECT 字段名称,... FROM tb_name1 LEFT [OUTER] JOIN tb_name2 ON 条件;")])]),_._v(" "),t("ul",[t("li",[_._v("右外连接 -> 先显示右表中的全部记录，再去左表中查询复合条件的记录，不符合的以NULL代替")])]),_._v(" "),t("p",[t("code",[_._v("SELECT 字段名称,... FROM tb_name1 RIGHT [OUTER] JOIN tb_name2 ON 条件;")])]),_._v(" "),t("h2",{attrs:{id:"外键约束-只有innodb存储引擎支持外键"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#外键约束-只有innodb存储引擎支持外键"}},[_._v("#")]),_._v(" 外键约束 -> 只有InnoDB存储引擎支持外键")]),_._v(" "),t("h3",{attrs:{id:"建表时指定外键"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#建表时指定外键"}},[_._v("#")]),_._v(" 建表时指定外键")]),_._v(" "),t("p",[t("code",[_._v("[CONSTRAINT 外键名称] FOREIGN KEY(字段名称) REFERENCES 主表(字段名称);")])]),_._v(" "),t("ul",[t("li",[_._v("子表的外键字段和主表的主键字段类型要相似；如果是数值型要求一致，并且无符号也要一致；如果是字符型，要求类型一致，长度可以不同")]),_._v(" "),t("li",[_._v("如果外键字段没有创建索引，MySQL会自动帮我们添加索引")]),_._v(" "),t("li",[_._v("子表的外键关联的必须是父表的主键")])]),_._v(" "),t("p",[_._v("外键约束的参照操作:")]),_._v(" "),t("ul",[t("li",[_._v("CASCADE -> 从父表删除或更新，子表也跟着删除或者更新，级联的操作")]),_._v(" "),t("li",[_._v("SET NULL -> 从父表删除或者更新记录，并设置子表的外键列为NULL")]),_._v(" "),t("li",[_._v("NO ACTION | RESTRICT -> 拒绝对父表做更新或者删除操作")])]),_._v(" "),t("h3",{attrs:{id:"动态添加外键"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#动态添加外键"}},[_._v("#")]),_._v(" 动态添加外键")]),_._v(" "),t("p",[_._v("动态添加外键之前表中的记录一定合法的记录，没有脏值，否则外键添加不成功")]),_._v(" "),t("p",[t("code",[_._v("ALTER TABLE tb_name [CONSTRAINT 外键名称] ADD FOREIGN KEY(外键字段) REFERENCES 主表(主键字段);")])]),_._v(" "),t("h3",{attrs:{id:"动态删除外键"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#动态删除外键"}},[_._v("#")]),_._v(" 动态删除外键")]),_._v(" "),t("p",[t("code",[_._v("ALTER TABLE tb_name DROP FOREIGN KEY fk_name;")])]),_._v(" "),t("h2",{attrs:{id:"特殊形式的查询"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#特殊形式的查询"}},[_._v("#")]),_._v(" 特殊形式的查询")]),_._v(" "),t("h3",{attrs:{id:"子查询"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#子查询"}},[_._v("#")]),_._v(" 子查询")]),_._v(" "),t("p",[t("code",[_._v("SELECT 字段名称 FROM tb_name WHERE col_name=(SELECT col_name FROM tb_name)")])]),_._v(" "),t("ul",[t("li",[_._v("内层语句查询的结果可以做为外层语句查询的条件")]),_._v(" "),t("li",[_._v("由IN引发的子查询")]),_._v(" "),t("li",[_._v("由比较运算符引出子查询")]),_._v(" "),t("li",[_._v("由EXISTS引发的子查询")]),_._v(" "),t("li",[_._v("ANY SOME ALL")]),_._v(" "),t("li",[_._v("INSERT ... SELECT")]),_._v(" "),t("li",[_._v("CREATE ... SELECT")]),_._v(" "),t("li",[_._v("CREATE TABLE tbl_name LIKE tbl_name;")])]),_._v(" "),t("h3",{attrs:{id:"自身连接查询"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#自身连接查询"}},[_._v("#")]),_._v(" 自身连接查询")]),_._v(" "),t("p",[_._v("无限级分类的实现形式")]),_._v(" "),t("h3",{attrs:{id:"联合查询"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#联合查询"}},[_._v("#")]),_._v(" 联合查询")]),_._v(" "),t("p",[_._v("UNION ALL 是简单的合并，UNION会去掉表中重复记录。")]),_._v(" "),t("ul",[t("li",[_._v("UNION -> "),t("code",[_._v("SELECT 字段名称,... FROM tb_name1 UNION SELECT 字段名称... FROM tb_name2;")])]),_._v(" "),t("li",[_._v("UNION ALL -> "),t("code",[_._v("SELECT 字段名称,... FROM tb_name1 UNION ALL SELECT 字段名称... FROM tb_name2;")])])])])}),[],!1,null,null,null);a.default=e.exports}}]);