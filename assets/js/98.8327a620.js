(window.webpackJsonp=window.webpackJsonp||[]).push([[98],{705:function(s,n,t){"use strict";t.r(n);var a=t(11),e=Object(a.a)({},(function(){var s=this,n=s.$createElement,t=s._self._c||n;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h2",{attrs:{id:"nginx介绍"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#nginx介绍"}},[s._v("#")]),s._v(" Nginx介绍")]),s._v(" "),t("p",[s._v("Nginx是开源、高性能、高可靠的 Web 和反向代理服务器，其配置简单，并且支持热部署。性能是 Nginx 最重要的考量，其占用内存少、兵法能力强、能支持高达 5w 个并发连接，重要的是其免费支持商业化。")]),s._v(" "),t("p",[s._v("Nginx的最重要的几个使用场景:")]),s._v(" "),t("ul",[t("li",[s._v("静态资源服务，通过本地文件系统提供服务")]),s._v(" "),t("li",[s._v("反向代理服务，延伸出包括缓存、负载均衡等功能")]),s._v(" "),t("li",[s._v("API服务，OpenResty")])]),s._v(" "),t("h2",{attrs:{id:"相关概念"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#相关概念"}},[s._v("#")]),s._v(" 相关概念")]),s._v(" "),t("h3",{attrs:{id:"简单请求和非简单请求"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#简单请求和非简单请求"}},[s._v("#")]),s._v(" 简单请求和非简单请求")]),s._v(" "),t("p",[s._v("如果同时满足下面两个条件，就属于简单请求:")]),s._v(" "),t("ul",[t("li",[s._v("请求方法是 "),t("code",[s._v("HEAD、GET、POST")]),s._v(" 三种之一")]),s._v(" "),t("li",[s._v("HTTP头信息不超过以下头字段: "),t("code",[s._v("Accept、Accept-Lanage、Content-Language、Last-Event-ID、Content-Type")]),s._v(", 其中 Content-Type 只限于三个值 "),t("code",[s._v("application/x-www-form-urlencoded、multipart/form-data、text/plain")])])]),s._v(" "),t("p",[s._v("凡是不同时满足这两个条件的，都属于非简单请求，浏览器处理简单请求和非简单请求的方式不一样:")]),s._v(" "),t("p",[t("strong",[s._v("简单请求")])]),s._v(" "),t("p",[s._v("对于简单请求，浏览器会在头信息中增加 "),t("code",[s._v("Origin")]),s._v(" 字段后直接发出，该字段用来说用，本次请求来自的那个源(协议+域名+端口)。")]),s._v(" "),t("p",[s._v("如果浏览器 "),t("code",[s._v("Origin")]),s._v(" 指定的源不在许可范围内，服务器会返回一个正常的 HTTP 响应，浏览器取到响应之后发现其中的头信息中没有包含 "),t("code",[s._v("Access-Control-Allow-Origin")]),s._v(" 字段，就抛出一个错误给 XHR 的 "),t("code",[s._v("error")]),s._v(" 事件。")]),s._v(" "),t("p",[s._v("如果服务器发现 "),t("code",[s._v("Origin")]),s._v(" 指定的域名在许可范围内，服务器返回的响应会多处几个 "),t("code",[s._v("Access-Control-")]),s._v(" 开头的头信息字段。")]),s._v(" "),t("p",[t("strong",[s._v("非简单请求")])]),s._v(" "),t("p",[s._v("浏览器针对非简单请求，在正式通信之前，会发送一次 HTTP 预检 "),t("code",[s._v("OPTIONS")]),s._v(" 请求，先询问服务器，当前网页所在的域名是否在服务器的许可名单之中，以及可以使用那些 HTTP 请求方法和头信息字段。只有肯定响应浏览器才会发出正式的 XHR 请求，否则会报错。")]),s._v(" "),t("h3",{attrs:{id:"跨域"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#跨域"}},[s._v("#")]),s._v(" 跨域")]),s._v(" "),t("p",[s._v("在浏览器上当前访问的网站向另一个网站发送请求获取数据的过程就属于"),t("code",[s._v("跨域请求")]),s._v("。")]),s._v(" "),t("p",[s._v("跨域是浏览器的 "),t("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/Security/Same-origin_policy",target:"_blank",rel:"noopener noreferrer"}},[s._v("同源策略"),t("OutboundLink")],1),s._v(" 决定的，是一个重要的浏览器安全策略，用于限制一个 "),t("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Glossary/%E6%BA%90",target:"_blank",rel:"noopener noreferrer"}},[s._v("origin"),t("OutboundLink")],1),s._v(" 的文档或者它加载的脚本与另一个源的资源进行交互，它能够帮助阻隔恶意文档，减少可能被攻击的媒介，可以使用 "),t("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Glossary/CORS",target:"_blank",rel:"noopener noreferrer"}},[s._v("CORS"),t("OutboundLink")],1),s._v(" 配置解除这个限制。")]),s._v(" "),t("p",[s._v("如果当前源与另一个源的 "),t("code",[s._v("协议、host、端口")]),s._v(" 三者有一个不同就属于不同源。")]),s._v(" "),t("h3",{attrs:{id:"正向代理和反向代理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#正向代理和反向代理"}},[s._v("#")]),s._v(" 正向代理和反向代理")]),s._v(" "),t("p",[t("strong",[s._v("正向代理")]),s._v(": 客户端向代理服务器发送请求，并指定目标服务器，然后由代理服务器和目标服务器通信，转交请求并获得内容后返回给客户端(比如使用梯子)。")]),s._v(" "),t("p",[t("strong",[s._v("反向代理")]),s._v(": 直接收到请求的服务器是代理服务器，然后将请求转发给内部网络上真正进行处理的服务器，得到的结果返回给客户端(proxy_pass配置)。")]),s._v(" "),t("h3",{attrs:{id:"负载均衡"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#负载均衡"}},[s._v("#")]),s._v(" 负载均衡")]),s._v(" "),t("p",[s._v("一般情况下，客户端发送多个请求到服务器，服务器处理请求，其中一部分可能要操作一些资源如静态资源、数据库等，服务器处理完毕后，再将结果返回给客户端。")]),s._v(" "),t("p",[s._v("现如今，在请求爆发式增长的情况下，单机已经很难满足需求了，这时就需要进行集群，将请求(负载)分发到各个服务器上，这就是负载均衡。Nginx实现负载均衡，一般来说指的是将请求转发给服务器集群。")]),s._v(" "),t("h3",{attrs:{id:"动静分离"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#动静分离"}},[s._v("#")]),s._v(" 动静分离")]),s._v(" "),t("p",[s._v("为了加快网站的解析速度，可以把动态页面和静态页面由不同的服务器来解析，加快解析速度，降低原来单个服务器的压力。")]),s._v(" "),t("p",[s._v("如果请求的是静态资源，直接到静态资源目录获取资源，如果是动态资源的请求，则利用反向代理的原理，把请求转发到对应后台应用去处理，从而实现动静分离。")]),s._v(" "),t("p",[s._v("使用前后端分离后，可以很大程度上提升静态资源的访问资源，即使动态服务不可用，静态资源的访问也不会收到影响。")]),s._v(" "),t("h2",{attrs:{id:"nginx安装及启动"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#nginx安装及启动"}},[s._v("#")]),s._v(" Nginx安装及启动")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看 yum 中 nginx 版本")]),s._v("\nyum list "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" nginx\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 安装")]),s._v("\nyum "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" nginx\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看 nginx 版本号")]),s._v("\nnginx -v\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看 nginx 安装的相关文件")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("rpm")]),s._v(" -ql nginx\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br")])]),t("p",[s._v("主要关注的文件夹有两个:")]),s._v(" "),t("ul",[t("li",[t("code",[s._v("/etc/nginx/config.d")]),s._v(": 存放子配置的配置项，"),t("code",[s._v("/etc/nginx/nginx.conf")]),s._v(" 主配置文件默认把这个文件夹下的所有子配置项都引入")]),s._v(" "),t("li",[t("code",[s._v("/usr/share/nginx/html")]),s._v(": 通常静态文件都放在这个目录，也可以进行自定义")])]),s._v(" "),t("p",[s._v("安装之后开启 Nginx，如果系统开启了防火墙，那么需要设置一下在防火墙中加入需要开发的端口，如下:")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("systemctl start firewalld\nsystemctl stop firewalld\nsystemctl status firewalld    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看防火墙开始状态，running表示正在运行")]),s._v("\nfirewall-cmd --reload         "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 重启防火墙，永久打开端口需要reload一下")]),s._v("\nfirewall-cmd --list-all       "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看防火墙，添加的端口也可看到")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 添加开启端口, --permanent表示永久打开，不加是临时打开重启后失效")]),s._v("\nfirewall-cmd--permanent --zone"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("public --add-port"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("8888")]),s._v("/tcp\n\nsystemctl "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("enable")]),s._v(" nginx  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 设置 nginx 开机启动")]),s._v("\nsystemctl disable nginx "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 关闭 nginx 开机启动")]),s._v("\n\nsystemctl start nginx "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 启动nginx")]),s._v("\nsystemctl restart nginx "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 重启nginx")]),s._v("\nsystemctl reload nginx "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 重新加载nginx，用于修改配置后")]),s._v("\nsystemctl stop nginx "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 停止nginx")]),s._v("\nsystemctl status nginx "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看 Nginx 运行状态")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br")])]),t("p",[s._v("同时也可以安装前端前端相关的工具nvm -> node, git:")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 下载 nvm，或者看官网的步骤 https://github.com/nvm-sh/nvm#install--update-script")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.3/install.sh "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("bash")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("source")]),s._v(" ~/.bashrc      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 安装完毕后，更新配置文件即可使用 nvm 命令")]),s._v("\nnvm ls-remote         "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看远程 node 版本")]),s._v("\nnvm "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" v12.16.3  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 选一个你要安装的版本安装，我这里选择 12.16.3")]),s._v("\nnvm list              "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 安装完毕查看安装的 node 版本")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("node")]),s._v(" -v               "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看是否安装好了")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# git 安装")]),s._v("\nyum "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br")])])])}),[],!1,null,null,null);n.default=e.exports}}]);